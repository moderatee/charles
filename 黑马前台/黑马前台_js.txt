什么是脚本语言?

​	java源代码 ----> 编译成.class文件 -----> java虚拟机中才能执行

​	脚本语言:   源码  -------- > 解释执行

​	js由我们的浏览器来解释执行
##### JS的组成:
ECMAScript : 核心部分 ,定义js的语法规范

DOM: document Object Model 文档对象模型 , 主要是用来管理页面的

BOM : Browser Object Model  浏览器对象模型, 前进,后退,页面刷新, 地址栏, 历史记录, 屏幕宽高


##### JS的语法:

变量弱类型: var i = true

区分大小写

语句结束之后的分号 ,可以有,也可以没有

写在script标签


##### JS的数据类型:

- 基本类型
  - string
  - number
  - boolean 
  - undefine
  - null
- 引用类型
  - 对象, 内置对象
- 类型转换
  - js内部自动转换 

- 获取页面元素: document.getElementById("id的名称");
- document.write()  向页面输出
- console.log() 向控制台输出
- innerHTML:  向页面输出

JS声明变量:

​	var 变量的名称 = 变量的值

JS声明函数:

​	var 函数的名称 = function(){	

​	}

​	

​	function 函数的名称(){

​	}


切换图片
var img = document.getElementById("img1");
img.src = "../img/1-161104143944.gif";

			setInterval("test()",2000);
			setTimeout("test()",2000);
var timerID;
			function startDinshiqi(){
//				timerID = setInterval("test()",2000);
				timerID = setTimeout("test()",3000);
			}
			
			function stopDingshiqi(){
//				clearInterval(timerID);
				clearTimeout(timerID);
			}
	onload="init()" 

图片显示和隐藏	
var img = document.getElementById("img1");
				img.style.display = "none";
var img = document.getElementById("img1");
				img.style.display = "block";
				
文档加载顺序
			var img = document.getElementById("img1");
			在head的script中定义获取img1对象,是获取不到的.因为下面的div没有被加载.
			可以放到function中去处理或者把script放到div后面

******************************************************************
隔行换色
function init(){
				//得到表格
				var tab = document.getElementById("tab");
				//得到表格中每一行
				var rows = tab.rows;
				//便利所有的行,然后根据奇数 偶数
				for(var i=1; i < rows.length; i++){
					var row = rows[i];  //得到其中的某一行
					if(i%2==0){
						row.bgColor = "yellow";
					}else{
						row.bgColor = "red"
					}
				}
			}

function checkAll(){
//				获得当前第一个checkbox的状态
				var check1 = document.getElementById("check1");
				//得到当前checked状态
				var checked = check1.checked;
//				 	获得所有分类项的checkbox
//				var checks = document.getElementsByTagName("input");
				var checks = document.getElementsByName("checkone");
//				alert(checks.length);
				for(var i = 0; i < checks.length; i++){
//				 	修改每一个checkbox的状态
					var checkone = checks[i];
					checkone.checked = checked;
				}
			}


/*动态添加 :   <p>文本</p> */
			function dianwo(){
				var div = document.getElementById("div1");
				//创建元素节点
				var p = document.createElement("p");  // <p></p>
				//创建文本节点
				var textNode = document.createTextNode("文本内容");//  文本内容
				
				//将p 和文本内容关联起来
				p.appendChild(textNode);  //  <p>文本</p> 
				
				//将P添加到目标div中
				div.appendChild(p);
			}

##################################################################
<script>
			/*
				准备工作 : 准备数据
			*/
			var provinces = [
				["深圳市","东莞市","惠州市","广州市"],
				["长沙市","岳阳市","株洲市","湘潭市"],
				["厦门市","福州市","漳州市","泉州市"]
			];
			/*
				1. 确定事件:  onchange
				2. 函数: selectProvince()
				3. 函数里面要搞事情了
					得到当前操作元素
					得到当前选中的是那一个省份
					从数组中取出对应的城市信息
					
					动态创建城市元素节点
					添加到城市select中
					
			*/
			function selectProvince(){
				var province = document.getElementById("province");
				//得到当前选中的是哪个省份
				//alert(province.value);
				var value = province.value;
				//从数组中取出对应的城市信息
				var cities = provinces[value];
				var citySelect = document.getElementById("city");
				//清空select中的option
				citySelect.options.length = 0;
				
				for (var i=0; i < cities.length; i++) {
//					alert(cities[i]);
					var cityText = cities[i]; 
					//动态创建城市元素节点   <option>东莞市</option>
					
					//创建option节点
					var option1 = document.createElement("option"); // <option></option>
					//创建城市文本节点
					var textNode = document.createTextNode(cityText) ;// 东莞市
					
					//将option节点和文本内容关联起来
					option1.appendChild(textNode);  //<option>东莞市</option>
					
//					添加到城市select中
					citySelect.appendChild(option1);
				}
				
			}
			
		</script>

**********************************************************************
左右联动

		<!--
			步骤分析
				1. 确定事件: 点击事件 :onclick事件
				2. 事件要触发函数 selectOne
				3. selectOne要做一些操作
					(将左边选中的元素移动到右边的select中)
					1. 获取左边Select中被选中的元素
					2. 将选中的元素添加到右边的Select中就可以
		-->
		<script>
			
			function selectOne(){
//				1. 获取左边Select中被选中的元素
				var leftSelect = document.getElementById("leftSelect");
				var options = leftSelect.options;
				
				//找到右侧的Select
				var rightSelect = document.getElementById("rightSelect");
				//遍历找出被选中的option
				for(var i=0; i < options.length; i++){
					var option1 = options[i];
					if(option1.selected){
		//				2. 将选中的元素添加到右边的Select中就可以
						rightSelect.appendChild(option1);
					}
				}
			}
			
			//将左边所有的商品移动到右边
			function selectAll(){
//				1. 获取左边Select中被选中的元素
				var leftSelect = document.getElementById("leftSelect");
				var options = leftSelect.options;
				
				//找到右侧的Select
				var rightSelect = document.getElementById("rightSelect");
				//遍历找出被选中的option
				for(var i=options.length - 1; i >=0; i--){
					var option1 = options[i];
					rightSelect.appendChild(option1);
				}
			}
			
定时器: 

​	setInterval

​	setTimeout

​	clearInterval

​	clearTimeout

控制图片显示隐藏

​	img.style.display = "block"

​	img.style.display = "none"



表单中常用的事件:

​	onfocus: 获取焦点事件

​	onblur : 失去焦点的事件

​	onkeyup: 按键抬起的事件

​	onclick:  单击事件

​	ondblclick:  双击事件 

表格隔行换色,鼠标移入和移除要变色:

​	onmouseenter:  鼠标移入

​	onmouseout:  鼠标移出

​	onload:  文档加载完成事件

​	onsubmit:  提交

​	onchange:   下拉列表内容改变



checkbox.checked  选中状态



DOM的文档操作:

​	添加节点: appendChild

​	创建节点: document.createElement

​	创建文本节点: document.createTextNode()

